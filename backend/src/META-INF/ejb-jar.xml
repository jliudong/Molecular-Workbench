<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE ejb-jar PUBLIC "-//Sun Microsystems, Inc.//DTD Enterprise JavaBeans 2.0//EN" "http://java.sun.com/dtd/ejb-jar_2_0.dtd">

<ejb-jar >

   <description><![CDATA[No Description.]]></description>
   <display-name>Generated by XDoclet</display-name>

   <enterprise-beans>

      <!-- Session Beans -->
      <session >
         <description><![CDATA[Description for ReportManager]]></description>
         <display-name>Name for ReportManager</display-name>

         <ejb-name>ReportManager</ejb-name>

         <home>org.concord.mwbackend.interfaces.ReportManagerHome</home>
         <remote>org.concord.mwbackend.interfaces.ReportManager</remote>
         <ejb-class>org.concord.mwbackend.ejb.ReportManagerBean</ejb-class>
         <session-type>Stateless</session-type>
         <transaction-type>Container</transaction-type>

      </session>

      <session >
         <description><![CDATA[Description for UserContact]]></description>
         <display-name>Name for UserContact</display-name>

         <ejb-name>UserContact</ejb-name>

         <home>org.concord.mwbackend.interfaces.UserContactHome</home>
         <remote>org.concord.mwbackend.interfaces.UserContact</remote>
         <ejb-class>org.concord.mwbackend.ejb.UserContactBean</ejb-class>
         <session-type>Stateless</session-type>
         <transaction-type>Container</transaction-type>

      </session>

      <session >
         <description><![CDATA[Description for ActivityManager]]></description>
         <display-name>Name for ActivityManager</display-name>

         <ejb-name>ActivityManager</ejb-name>

         <home>org.concord.mwbackend.interfaces.ActivityManagerHome</home>
         <remote>org.concord.mwbackend.interfaces.ActivityManager</remote>
         <ejb-class>org.concord.mwbackend.ejb.ActivityManagerBean</ejb-class>
         <session-type>Stateless</session-type>
         <transaction-type>Container</transaction-type>

      </session>

      <session >
         <description><![CDATA[Registration to the Molecular Workbench]]></description>
         <display-name>Molecular Workbench Registration</display-name>

         <ejb-name>Registration</ejb-name>

         <home>org.concord.mwbackend.interfaces.RegistrationHome</home>
         <remote>org.concord.mwbackend.interfaces.Registration</remote>
         <ejb-class>org.concord.mwbackend.ejb.RegistrationBean</ejb-class>
         <session-type>Stateless</session-type>
         <transaction-type>Container</transaction-type>

      </session>

      <session >
         <description><![CDATA[Description for CommentManager]]></description>
         <display-name>Name for CommentManager</display-name>

         <ejb-name>CommentManager</ejb-name>

         <home>org.concord.mwbackend.interfaces.CommentManagerHome</home>
         <remote>org.concord.mwbackend.interfaces.CommentManager</remote>
         <ejb-class>org.concord.mwbackend.ejb.CommentManagerBean</ejb-class>
         <session-type>Stateless</session-type>
         <transaction-type>Container</transaction-type>

      </session>

      <session >
         <description><![CDATA[Description for Receptionist]]></description>
         <display-name>Name for Receptionist</display-name>

         <ejb-name>Receptionist</ejb-name>

         <home>org.concord.mwbackend.interfaces.ReceptionistHome</home>
         <remote>org.concord.mwbackend.interfaces.Receptionist</remote>
         <ejb-class>org.concord.mwbackend.ejb.ReceptionistBean</ejb-class>
         <session-type>Stateless</session-type>
         <transaction-type>Container</transaction-type>

      </session>

      <session >
         <description><![CDATA[Description for ModelManager]]></description>
         <display-name>Name for ModelManager</display-name>

         <ejb-name>ModelManager</ejb-name>

         <home>org.concord.mwbackend.interfaces.ModelManagerHome</home>
         <remote>org.concord.mwbackend.interfaces.ModelManager</remote>
         <ejb-class>org.concord.mwbackend.ejb.ModelManagerBean</ejb-class>
         <session-type>Stateless</session-type>
         <transaction-type>Container</transaction-type>

      </session>

      <session >
         <description><![CDATA[Description for ClassManager]]></description>
         <display-name>Name for ClassManager</display-name>

         <ejb-name>ClassManager</ejb-name>

         <home>org.concord.mwbackend.interfaces.ClassManagerHome</home>
         <remote>org.concord.mwbackend.interfaces.ClassManager</remote>
         <ejb-class>org.concord.mwbackend.ejb.ClassManagerBean</ejb-class>
         <session-type>Stateless</session-type>
         <transaction-type>Container</transaction-type>

      </session>

     <!--
       To add session beans that you have deployment descriptor info for, add
       a file to your XDoclet merge directory called session-beans.xml that contains
       the <session></session> markup for those beans.
     -->

      <!-- Entity Beans -->
      <entity >
         <description><![CDATA[Description for Report]]></description>
         <display-name>Name for Report</display-name>

         <ejb-name>Report</ejb-name>

         <local-home>org.concord.mwbackend.interfaces.ReportLocalHome</local-home>
         <local>org.concord.mwbackend.interfaces.ReportLocal</local>

         <ejb-class>org.concord.mwbackend.ejb.ReportBean</ejb-class>
         <persistence-type>Container</persistence-type>
         <prim-key-class>java.lang.Integer</prim-key-class>
         <reentrant>False</reentrant>
         <cmp-version>2.x</cmp-version>
         <abstract-schema-name>Report</abstract-schema-name>
         <cmp-field >
            <description><![CDATA[Getter for CMP Field id]]></description>
            <field-name>id</field-name>
         </cmp-field>
         <cmp-field >
            <description><![CDATA[Getter for CMP Field url]]></description>
            <field-name>url</field-name>
         </cmp-field>
         <cmp-field >
            <description><![CDATA[Getter for CMP Field title]]></description>
            <field-name>title</field-name>
         </cmp-field>
         <cmp-field >
            <description><![CDATA[Getter for CMP Field timeMillis]]></description>
            <field-name>timeMillis</field-name>
         </cmp-field>
         <cmp-field >
            <description><![CDATA[Getter for CMP Field userID]]></description>
            <field-name>userID</field-name>
         </cmp-field>
         <cmp-field >
            <description><![CDATA[Getter for CMP Field teacher]]></description>
            <field-name>teacher</field-name>
         </cmp-field>
         <cmp-field >
            <description><![CDATA[Getter for CMP Field deleted]]></description>
            <field-name>deleted</field-name>
         </cmp-field>
         <primkey-field>id</primkey-field>

         <query>
            <query-method>
               <method-name>findByAuthor</method-name>
               <method-params>
                  <method-param>java.lang.String</method-param>
               </method-params>
            </query-method>
            <ejb-ql><![CDATA[SELECT OBJECT(s) FROM Report s WHERE s.userID = ?1 AND s.deleted = FALSE ORDER BY s.id DESC]]></ejb-ql>
         </query>
         <query>
            <query-method>
               <method-name>findByAuthor</method-name>
               <method-params>
                  <method-param>java.lang.String</method-param>
                  <method-param>java.lang.Boolean</method-param>
               </method-params>
            </query-method>
            <ejb-ql><![CDATA[SELECT OBJECT(s) FROM Report s WHERE s.userID = ?1 AND s.deleted = ?2 ORDER BY s.id DESC]]></ejb-ql>
         </query>
         <query>
            <query-method>
               <method-name>findByTeacher</method-name>
               <method-params>
                  <method-param>java.lang.String</method-param>
                  <method-param>java.lang.Boolean</method-param>
               </method-params>
            </query-method>
            <ejb-ql><![CDATA[SELECT OBJECT(s) FROM Report s WHERE s.teacher = ?1 AND s.deleted = ?2 ORDER BY s.id DESC]]></ejb-ql>
         </query>
         <query>
            <query-method>
               <method-name>findBetween</method-name>
               <method-params>
                  <method-param>long</method-param>
                  <method-param>long</method-param>
               </method-params>
            </query-method>
            <ejb-ql><![CDATA[SELECT OBJECT(o) FROM Report o WHERE o.timeMillis BETWEEN ?1 AND ?2 ORDER BY o.id DESC]]></ejb-ql>
         </query>
         <query>
            <query-method>
               <method-name>findLatest</method-name>
               <method-params>
               </method-params>
            </query-method>
            <ejb-ql><![CDATA[SELECT MAX(o.id) FROM Report o]]></ejb-ql>
         </query>
         <query>
            <query-method>
               <method-name>findId</method-name>
               <method-params>
                  <method-param>int</method-param>
               </method-params>
            </query-method>
            <ejb-ql><![CDATA[SELECT OBJECT(o) FROM Report o WHERE o.id = ?1]]></ejb-ql>
         </query>
         <query>
            <query-method>
               <method-name>findIdBetween</method-name>
               <method-params>
                  <method-param>int</method-param>
                  <method-param>int</method-param>
               </method-params>
            </query-method>
            <ejb-ql><![CDATA[SELECT OBJECT(o) FROM Report o WHERE o.id BETWEEN ?1 AND ?2 ORDER BY o.id DESC]]></ejb-ql>
         </query>
         <query>
            <query-method>
               <method-name>findByKeyword</method-name>
               <method-params>
                  <method-param>java.lang.String</method-param>
               </method-params>
            </query-method>
            <ejb-ql><![CDATA[SELECT OBJECT(o) FROM Report o WHERE o.title LIKE ?1 ORDER BY o.id DESC]]></ejb-ql>
         </query>
         <query>
            <query-method>
               <method-name>findByKeywordAndTeacher</method-name>
               <method-params>
                  <method-param>java.lang.String</method-param>
                  <method-param>java.lang.String</method-param>
               </method-params>
            </query-method>
            <ejb-ql><![CDATA[SELECT OBJECT(o) FROM Report o WHERE o.title LIKE ?1 AND o.teacher = ?2 ORDER BY o.id DESC]]></ejb-ql>
         </query>
         <query>
            <query-method>
               <method-name>findByKeywordAndStudent</method-name>
               <method-params>
                  <method-param>java.lang.String</method-param>
                  <method-param>java.lang.String</method-param>
               </method-params>
            </query-method>
            <ejb-ql><![CDATA[SELECT OBJECT(o) FROM Report o WHERE o.title LIKE ?1 AND o.userID = ?2 ORDER BY o.id DESC]]></ejb-ql>
         </query>
	  <!-- Write a file named ejb-finders-ReportBean.xml if you want to define extra finders. -->

      </entity>

      <entity >
         <description><![CDATA[Description for Clazz]]></description>
         <display-name>Name for Clazz</display-name>

         <ejb-name>Clazz</ejb-name>

         <local-home>org.concord.mwbackend.interfaces.ClazzLocalHome</local-home>
         <local>org.concord.mwbackend.interfaces.ClazzLocal</local>

         <ejb-class>org.concord.mwbackend.ejb.ClazzBean</ejb-class>
         <persistence-type>Container</persistence-type>
         <prim-key-class>java.lang.String</prim-key-class>
         <reentrant>False</reentrant>
         <cmp-version>2.x</cmp-version>
         <abstract-schema-name>Clazz</abstract-schema-name>
         <cmp-field >
            <description><![CDATA[Getter for CMP Field ClazzID]]></description>
            <field-name>clazzID</field-name>
         </cmp-field>
         <cmp-field >
            <description><![CDATA[Getter for CMP Field TeacherID]]></description>
            <field-name>teacherID</field-name>
         </cmp-field>
         <cmp-field >
            <description><![CDATA[Getter for CMP Field archived]]></description>
            <field-name>archived</field-name>
         </cmp-field>
         <primkey-field>clazzID</primkey-field>

         <query>
            <query-method>
               <method-name>findClasses</method-name>
               <method-params>
                  <method-param>java.lang.String</method-param>
                  <method-param>java.lang.Boolean</method-param>
               </method-params>
            </query-method>
            <ejb-ql><![CDATA[SELECT OBJECT(c) FROM Clazz c WHERE c.teacherID = ?1 AND c.archived = ?2]]></ejb-ql>
         </query>
	  <!-- Write a file named ejb-finders-ClazzBean.xml if you want to define extra finders. -->

      </entity>

      <entity >
         <description><![CDATA[Description for Comment]]></description>
         <display-name>Name for Comment</display-name>

         <ejb-name>Comment</ejb-name>

         <local-home>org.concord.mwbackend.interfaces.CommentLocalHome</local-home>
         <local>org.concord.mwbackend.interfaces.CommentLocal</local>

         <ejb-class>org.concord.mwbackend.ejb.CommentBean</ejb-class>
         <persistence-type>Container</persistence-type>
         <prim-key-class>java.lang.Integer</prim-key-class>
         <reentrant>False</reentrant>
         <cmp-version>2.x</cmp-version>
         <abstract-schema-name>Comment</abstract-schema-name>
         <cmp-field >
            <description><![CDATA[Getter for CMP Field Id]]></description>
            <field-name>id</field-name>
         </cmp-field>
         <cmp-field >
            <description><![CDATA[Getter for CMP Field Url]]></description>
            <field-name>url</field-name>
         </cmp-field>
         <cmp-field >
            <description><![CDATA[Getter for CMP Field Title]]></description>
            <field-name>title</field-name>
         </cmp-field>
         <cmp-field >
            <description><![CDATA[Getter for CMP Field Body]]></description>
            <field-name>body</field-name>
         </cmp-field>
         <cmp-field >
            <description><![CDATA[Getter for CMP Field Ip]]></description>
            <field-name>ip</field-name>
         </cmp-field>
         <cmp-field >
            <description><![CDATA[Getter for CMP Field TimeMillis]]></description>
            <field-name>timeMillis</field-name>
         </cmp-field>
         <cmp-field >
            <description><![CDATA[Getter for CMP Field UserID]]></description>
            <field-name>userID</field-name>
         </cmp-field>
         <primkey-field>id</primkey-field>

         <query>
            <query-method>
               <method-name>findByUrl</method-name>
               <method-params>
                  <method-param>java.lang.String</method-param>
               </method-params>
            </query-method>
            <ejb-ql><![CDATA[SELECT OBJECT(c) FROM Comment c WHERE c.url = ?1 ORDER BY c.id DESC]]></ejb-ql>
         </query>
         <query>
            <query-method>
               <method-name>findCommentsAfter</method-name>
               <method-params>
                  <method-param>long</method-param>
               </method-params>
            </query-method>
            <ejb-ql><![CDATA[SELECT OBJECT(c) FROM Comment c WHERE c.timeMillis > ?1 ORDER BY c.id DESC]]></ejb-ql>
         </query>
         <query>
            <query-method>
               <method-name>findBetween</method-name>
               <method-params>
                  <method-param>long</method-param>
                  <method-param>long</method-param>
               </method-params>
            </query-method>
            <ejb-ql><![CDATA[SELECT OBJECT(c) FROM Comment c WHERE c.timeMillis BETWEEN ?1 AND ?2 ORDER BY c.id DESC]]></ejb-ql>
         </query>
         <query>
            <query-method>
               <method-name>findByUser</method-name>
               <method-params>
                  <method-param>java.lang.String</method-param>
               </method-params>
            </query-method>
            <ejb-ql><![CDATA[SELECT OBJECT(c) FROM Comment c WHERE c.userID = ?1 ORDER BY c.id DESC]]></ejb-ql>
         </query>
	  <!-- Write a file named ejb-finders-CommentBean.xml if you want to define extra finders. -->

      </entity>

      <entity >
         <description><![CDATA[Description for LaunchRecord]]></description>
         <display-name>Name for LaunchRecord</display-name>

         <ejb-name>LaunchRecord</ejb-name>

         <local-home>org.concord.mwbackend.interfaces.LaunchRecordLocalHome</local-home>
         <local>org.concord.mwbackend.interfaces.LaunchRecordLocal</local>

         <ejb-class>org.concord.mwbackend.ejb.LaunchRecordBean</ejb-class>
         <persistence-type>Container</persistence-type>
         <prim-key-class>java.lang.Integer</prim-key-class>
         <reentrant>False</reentrant>
         <cmp-version>2.x</cmp-version>
         <abstract-schema-name>LaunchRecord</abstract-schema-name>
         <cmp-field >
            <description><![CDATA[Getter for CMP Field id]]></description>
            <field-name>id</field-name>
         </cmp-field>
         <cmp-field >
            <description><![CDATA[Getter for CMP Field userName]]></description>
            <field-name>userName</field-name>
         </cmp-field>
         <cmp-field >
            <description><![CDATA[Getter for CMP Field clientHost]]></description>
            <field-name>clientHost</field-name>
         </cmp-field>
         <cmp-field >
            <description><![CDATA[Getter for CMP Field ipAddress]]></description>
            <field-name>ipAddress</field-name>
         </cmp-field>
         <cmp-field >
            <description><![CDATA[Getter for CMP Field os]]></description>
            <field-name>os</field-name>
         </cmp-field>
         <cmp-field >
            <description><![CDATA[Getter for CMP Field javaVersion]]></description>
            <field-name>javaVersion</field-name>
         </cmp-field>
         <cmp-field >
            <description><![CDATA[Getter for CMP Field mwVersion]]></description>
            <field-name>mwVersion</field-name>
         </cmp-field>
         <cmp-field >
            <description><![CDATA[Getter for CMP Field jwsLaunch]]></description>
            <field-name>jwsLaunch</field-name>
         </cmp-field>
         <cmp-field >
            <description><![CDATA[Getter for CMP Field timeMillis]]></description>
            <field-name>timeMillis</field-name>
         </cmp-field>
         <primkey-field>id</primkey-field>

         <query>
            <query-method>
               <method-name>findRecordsAfter</method-name>
               <method-params>
                  <method-param>long</method-param>
               </method-params>
            </query-method>
            <ejb-ql><![CDATA[SELECT OBJECT(o) FROM LaunchRecord o WHERE o.timeMillis > ?1 ORDER BY o.timeMillis DESC]]></ejb-ql>
         </query>
	  <!-- Write a file named ejb-finders-LaunchRecordBean.xml if you want to define extra finders. -->

      </entity>

      <entity >
         <description><![CDATA[Description for User]]></description>
         <display-name>Name for User</display-name>

         <ejb-name>User</ejb-name>

         <local-home>org.concord.mwbackend.interfaces.UserLocalHome</local-home>
         <local>org.concord.mwbackend.interfaces.UserLocal</local>

         <ejb-class>org.concord.mwbackend.ejb.UserBean</ejb-class>
         <persistence-type>Container</persistence-type>
         <prim-key-class>java.lang.String</prim-key-class>
         <reentrant>False</reentrant>
         <cmp-version>2.x</cmp-version>
         <abstract-schema-name>User</abstract-schema-name>
         <cmp-field >
            <description><![CDATA[Getter for CMP Field UserID]]></description>
            <field-name>userID</field-name>
         </cmp-field>
         <cmp-field >
            <description><![CDATA[Getter for CMP Field Password]]></description>
            <field-name>password</field-name>
         </cmp-field>
         <cmp-field >
            <description><![CDATA[Getter for CMP Field email]]></description>
            <field-name>email</field-name>
         </cmp-field>
         <cmp-field >
            <description><![CDATA[Getter for CMP Field MemberSince]]></description>
            <field-name>memberSince</field-name>
         </cmp-field>
         <cmp-field >
            <description><![CDATA[Getter for CMP Field firstName]]></description>
            <field-name>firstName</field-name>
         </cmp-field>
         <cmp-field >
            <description><![CDATA[Getter for CMP Field lastName]]></description>
            <field-name>lastName</field-name>
         </cmp-field>
         <cmp-field >
            <description><![CDATA[Getter for CMP Field institution]]></description>
            <field-name>institution</field-name>
         </cmp-field>
         <cmp-field >
            <description><![CDATA[Getter for CMP Field state]]></description>
            <field-name>state</field-name>
         </cmp-field>
         <cmp-field >
            <description><![CDATA[Getter for CMP Field country]]></description>
            <field-name>country</field-name>
         </cmp-field>
         <cmp-field >
            <description><![CDATA[Getter for CMP Field Type]]></description>
            <field-name>type</field-name>
         </cmp-field>
         <cmp-field >
            <description><![CDATA[Getter for CMP Field teacher]]></description>
            <field-name>teacher</field-name>
         </cmp-field>
         <cmp-field >
            <description><![CDATA[Getter for CMP Field klass]]></description>
            <field-name>klass</field-name>
         </cmp-field>
         <cmp-field >
            <description><![CDATA[Getter for CMP Field notifyModel]]></description>
            <field-name>notifyModel</field-name>
         </cmp-field>
         <cmp-field >
            <description><![CDATA[Getter for CMP Field notifyReport]]></description>
            <field-name>notifyReport</field-name>
         </cmp-field>
         <cmp-field >
            <description><![CDATA[Getter for CMP Field acceptNewsletter]]></description>
            <field-name>acceptNewsletter</field-name>
         </cmp-field>
         <primkey-field>userID</primkey-field>

         <query>
            <query-method>
               <method-name>findAll</method-name>
               <method-params>
               </method-params>
            </query-method>
            <ejb-ql><![CDATA[SELECT OBJECT(u) FROM User u]]></ejb-ql>
         </query>
         <query>
            <query-method>
               <method-name>findByEmail</method-name>
               <method-params>
                  <method-param>java.lang.String</method-param>
               </method-params>
            </query-method>
            <ejb-ql><![CDATA[SELECT OBJECT(u) FROM User u WHERE u.email = ?1]]></ejb-ql>
         </query>
         <query>
            <query-method>
               <method-name>findByName</method-name>
               <method-params>
                  <method-param>java.lang.Integer</method-param>
                  <method-param>java.lang.String</method-param>
                  <method-param>java.lang.String</method-param>
               </method-params>
            </query-method>
            <ejb-ql><![CDATA[SELECT OBJECT(u) FROM User u WHERE u.type = ?1 AND u.firstName = ?2 AND u.lastName = ?3]]></ejb-ql>
         </query>
         <query>
            <query-method>
               <method-name>findByLastName</method-name>
               <method-params>
                  <method-param>java.lang.Integer</method-param>
                  <method-param>java.lang.String</method-param>
               </method-params>
            </query-method>
            <ejb-ql><![CDATA[SELECT OBJECT(u) FROM User u WHERE u.type = ?1 AND u.lastName = ?2]]></ejb-ql>
         </query>
         <query>
            <query-method>
               <method-name>findByType</method-name>
               <method-params>
                  <method-param>java.lang.Integer</method-param>
               </method-params>
            </query-method>
            <ejb-ql><![CDATA[SELECT OBJECT(u) FROM User u WHERE u.type = ?1 ORDER BY u.userID ASC]]></ejb-ql>
         </query>
         <query>
            <query-method>
               <method-name>findStudents</method-name>
               <method-params>
                  <method-param>java.lang.String</method-param>
               </method-params>
            </query-method>
            <ejb-ql><![CDATA[SELECT OBJECT(u) FROM User u WHERE u.teacher = ?1 ORDER BY u.userID ASC]]></ejb-ql>
         </query>
         <query>
            <query-method>
               <method-name>findStudentsOfClass</method-name>
               <method-params>
                  <method-param>java.lang.String</method-param>
                  <method-param>java.lang.String</method-param>
               </method-params>
            </query-method>
            <ejb-ql><![CDATA[SELECT OBJECT(u) FROM User u WHERE u.klass = ?1 AND u.teacher = ?2 ORDER BY u.userID ASC]]></ejb-ql>
         </query>
         <query>
            <query-method>
               <method-name>findPersonsToNotifyForNewModel</method-name>
               <method-params>
                  <method-param>java.lang.Boolean</method-param>
               </method-params>
            </query-method>
            <ejb-ql><![CDATA[SELECT OBJECT(u) FROM User u WHERE u.notifyModel = ?1]]></ejb-ql>
         </query>
	  <!-- Write a file named ejb-finders-UserBean.xml if you want to define extra finders. -->

      </entity>

      <entity >
         <description><![CDATA[Description for Model]]></description>
         <display-name>Name for Model</display-name>

         <ejb-name>Model</ejb-name>

         <local-home>org.concord.mwbackend.interfaces.ModelLocalHome</local-home>
         <local>org.concord.mwbackend.interfaces.ModelLocal</local>

         <ejb-class>org.concord.mwbackend.ejb.ModelBean</ejb-class>
         <persistence-type>Container</persistence-type>
         <prim-key-class>java.lang.Integer</prim-key-class>
         <reentrant>False</reentrant>
         <cmp-version>2.x</cmp-version>
         <abstract-schema-name>Model</abstract-schema-name>
         <cmp-field >
            <description><![CDATA[Getter for CMP Field id]]></description>
            <field-name>id</field-name>
         </cmp-field>
         <cmp-field >
            <description><![CDATA[Getter for CMP Field zipFile]]></description>
            <field-name>zipFile</field-name>
         </cmp-field>
         <cmp-field >
            <description><![CDATA[Getter for CMP Field zipSize]]></description>
            <field-name>zipSize</field-name>
         </cmp-field>
         <cmp-field >
            <description><![CDATA[Getter for CMP Field title]]></description>
            <field-name>title</field-name>
         </cmp-field>
         <cmp-field >
            <description><![CDATA[Getter for CMP Field timeMillis]]></description>
            <field-name>timeMillis</field-name>
         </cmp-field>
         <cmp-field >
            <description><![CDATA[Getter for CMP Field url]]></description>
            <field-name>url</field-name>
         </cmp-field>
         <cmp-field >
            <description><![CDATA[Getter for CMP Field UserID]]></description>
            <field-name>userID</field-name>
         </cmp-field>
         <cmp-field >
            <description><![CDATA[Getter for CMP Field teacher]]></description>
            <field-name>teacher</field-name>
         </cmp-field>
         <cmp-field >
            <description><![CDATA[Getter for CMP Field klass]]></description>
            <field-name>klass</field-name>
         </cmp-field>
         <cmp-field >
            <description><![CDATA[Getter for CMP Field deleted]]></description>
            <field-name>deleted</field-name>
         </cmp-field>
         <cmp-field >
            <description><![CDATA[Getter for CMP Field privacy]]></description>
            <field-name>privacy</field-name>
         </cmp-field>
         <primkey-field>id</primkey-field>

         <query>
            <query-method>
               <method-name>findAllByAuthor</method-name>
               <method-params>
                  <method-param>java.lang.String</method-param>
                  <method-param>java.lang.Boolean</method-param>
               </method-params>
            </query-method>
            <ejb-ql><![CDATA[SELECT OBJECT(s) FROM Model s WHERE s.userID = ?1 AND s.deleted = ?2 ORDER BY s.id DESC]]></ejb-ql>
         </query>
         <query>
            <query-method>
               <method-name>findPublishedByAuthor</method-name>
               <method-params>
                  <method-param>java.lang.String</method-param>
               </method-params>
            </query-method>
            <ejb-ql><![CDATA[SELECT OBJECT(s) FROM Model s WHERE s.userID = ?1 AND (s.privacy='public' OR s.privacy IS NULL) AND s.deleted = FALSE ORDER BY s.id DESC]]></ejb-ql>
         </query>
         <query>
            <query-method>
               <method-name>findNonPrivateByAuthor</method-name>
               <method-params>
                  <method-param>java.lang.String</method-param>
               </method-params>
            </query-method>
            <ejb-ql><![CDATA[SELECT OBJECT(s) FROM Model s WHERE s.userID = ?1 AND (s.privacy='public' OR s.privacy='class' OR s.privacy='teacher' OR s.privacy IS NULL) AND s.deleted = FALSE ORDER BY s.id DESC]]></ejb-ql>
         </query>
         <query>
            <query-method>
               <method-name>findByTeacher</method-name>
               <method-params>
                  <method-param>java.lang.String</method-param>
               </method-params>
            </query-method>
            <ejb-ql><![CDATA[SELECT OBJECT(s) FROM Model s WHERE s.teacher = ?1 AND (s.privacy='public' OR s.privacy='class' OR s.privacy='teacher' OR s.privacy IS NULL) AND s.deleted = FALSE ORDER BY s.id DESC]]></ejb-ql>
         </query>
         <query>
            <query-method>
               <method-name>findByClass</method-name>
               <method-params>
                  <method-param>java.lang.String</method-param>
               </method-params>
            </query-method>
            <ejb-ql><![CDATA[SELECT OBJECT(s) FROM Model s WHERE s.klass = ?1 AND s.deleted = FALSE AND (s.privacy='class' OR s.privacy='public' OR s.privacy IS NULL) ORDER BY s.id DESC]]></ejb-ql>
         </query>
         <query>
            <query-method>
               <method-name>findByClassForTeacher</method-name>
               <method-params>
                  <method-param>java.lang.String</method-param>
               </method-params>
            </query-method>
            <ejb-ql><![CDATA[SELECT OBJECT(s) FROM Model s WHERE s.klass = ?1 AND s.deleted = FALSE AND (s.privacy='class' OR s.privacy='teacher' OR s.privacy='public' OR s.privacy IS NULL) ORDER BY s.id DESC]]></ejb-ql>
         </query>
         <query>
            <query-method>
               <method-name>findPublishedBetween</method-name>
               <method-params>
                  <method-param>long</method-param>
                  <method-param>long</method-param>
               </method-params>
            </query-method>
            <ejb-ql><![CDATA[SELECT OBJECT(s) FROM Model s WHERE s.timeMillis BETWEEN ?1 AND ?2 AND s.deleted = FALSE AND (s.privacy IS NULL OR s.privacy='public') ORDER BY s.id DESC]]></ejb-ql>
         </query>
         <query>
            <query-method>
               <method-name>findAllBetween</method-name>
               <method-params>
                  <method-param>long</method-param>
                  <method-param>long</method-param>
               </method-params>
            </query-method>
            <ejb-ql><![CDATA[SELECT OBJECT(s) FROM Model s WHERE s.timeMillis BETWEEN ?1 AND ?2 AND s.deleted = FALSE ORDER BY s.id DESC]]></ejb-ql>
         </query>
         <query>
            <query-method>
               <method-name>findByUrl</method-name>
               <method-params>
                  <method-param>java.lang.String</method-param>
               </method-params>
            </query-method>
            <ejb-ql><![CDATA[SELECT OBJECT(s) FROM Model s WHERE s.url= ?1]]></ejb-ql>
         </query>
         <query>
            <query-method>
               <method-name>findLatest</method-name>
               <method-params>
               </method-params>
            </query-method>
            <ejb-ql><![CDATA[SELECT MAX(s.id) FROM Model s]]></ejb-ql>
         </query>
         <query>
            <query-method>
               <method-name>findIdBetween</method-name>
               <method-params>
                  <method-param>int</method-param>
                  <method-param>int</method-param>
               </method-params>
            </query-method>
            <ejb-ql><![CDATA[SELECT OBJECT(s) FROM Model s WHERE s.id BETWEEN ?1 AND ?2 AND s.deleted = FALSE ORDER BY s.id DESC]]></ejb-ql>
         </query>
	  <!-- Write a file named ejb-finders-ModelBean.xml if you want to define extra finders. -->

      </entity>

      <entity >
         <description><![CDATA[Description]]></description>
         <display-name>Name</display-name>

         <ejb-name>Activity</ejb-name>

         <local-home>org.concord.mwbackend.interfaces.ActivityLocalHome</local-home>
         <local>org.concord.mwbackend.interfaces.ActivityLocal</local>

         <ejb-class>org.concord.mwbackend.ejb.ActivityBean</ejb-class>
         <persistence-type>Container</persistence-type>
         <prim-key-class>java.lang.Integer</prim-key-class>
         <reentrant>False</reentrant>
         <cmp-version>2.x</cmp-version>
         <abstract-schema-name>Activity</abstract-schema-name>
         <cmp-field >
            <description><![CDATA[Getter for CMP Field id]]></description>
            <field-name>id</field-name>
         </cmp-field>
         <cmp-field >
            <description><![CDATA[Getter for CMP Field title]]></description>
            <field-name>title</field-name>
         </cmp-field>
         <cmp-field >
            <description><![CDATA[Getter for CMP Field Body]]></description>
            <field-name>instruction</field-name>
         </cmp-field>
         <cmp-field >
            <description><![CDATA[Getter for CMP Field title]]></description>
            <field-name>url</field-name>
         </cmp-field>
         <cmp-field >
            <description><![CDATA[Getter for CMP Field UserID]]></description>
            <field-name>userID</field-name>
         </cmp-field>
         <cmp-field >
            <description><![CDATA[Getter for CMP Field UserID]]></description>
            <field-name>classID</field-name>
         </cmp-field>
         <primkey-field>id</primkey-field>

         <query>
            <query-method>
               <method-name>findByUser</method-name>
               <method-params>
                  <method-param>java.lang.String</method-param>
               </method-params>
            </query-method>
            <ejb-ql><![CDATA[SELECT OBJECT(s) FROM Activity s WHERE s.userID = ?1 ORDER BY s.id DESC]]></ejb-ql>
         </query>
         <query>
            <query-method>
               <method-name>findByUserAndClass</method-name>
               <method-params>
                  <method-param>java.lang.String</method-param>
                  <method-param>java.lang.String</method-param>
               </method-params>
            </query-method>
            <ejb-ql><![CDATA[SELECT OBJECT(s) FROM Activity s WHERE s.userID = ?1 AND s.classID = ?2 ORDER BY s.id DESC]]></ejb-ql>
         </query>
	  <!-- Write a file named ejb-finders-ActivityBean.xml if you want to define extra finders. -->

      </entity>

     <!--
       To add entity beans that you have deployment descriptor info for, add
       a file to your XDoclet merge directory called entity-beans.xml that contains
       the <entity></entity> markup for those beans.
     -->

      <!-- Message Driven Beans -->
     <!--
       To add message driven beans that you have deployment descriptor info for, add
       a file to your XDoclet merge directory called message-driven-beans.xml that contains
       the <message-driven></message-driven> markup for those beans.
     -->

   </enterprise-beans>

   <!-- Relationships -->
   <relationships >
      <ejb-relation >
         <ejb-relation-name>Class-Students</ejb-relation-name>

         <ejb-relationship-role >
            <ejb-relationship-role-name>class-students</ejb-relationship-role-name>
            <multiplicity>One</multiplicity>
            <relationship-role-source >
               <ejb-name>Clazz</ejb-name>
            </relationship-role-source>
            <cmr-field >
               <cmr-field-name>students</cmr-field-name>
               <cmr-field-type>java.util.Collection</cmr-field-type>
            </cmr-field>
         </ejb-relationship-role>

         <ejb-relationship-role >
            <ejb-relationship-role-name>students-class</ejb-relationship-role-name>
            <multiplicity>Many</multiplicity>
            <relationship-role-source >
               <ejb-name>User</ejb-name>
            </relationship-role-source>
         </ejb-relationship-role>

      </ejb-relation>
      <ejb-relation >
         <ejb-relation-name>User-Comment</ejb-relation-name>

         <ejb-relationship-role >
            <ejb-relationship-role-name>user-has-comments</ejb-relationship-role-name>
            <multiplicity>One</multiplicity>
            <relationship-role-source >
               <ejb-name>User</ejb-name>
            </relationship-role-source>
            <cmr-field >
               <cmr-field-name>comments</cmr-field-name>
               <cmr-field-type>java.util.Collection</cmr-field-type>
            </cmr-field>
         </ejb-relationship-role>

         <ejb-relationship-role >
            <ejb-relationship-role-name>Comment-User</ejb-relationship-role-name>
            <multiplicity>Many</multiplicity>
            <relationship-role-source >
               <ejb-name>Comment</ejb-name>
            </relationship-role-source>
         </ejb-relationship-role>

      </ejb-relation>
        <!-- 
          To add relationships for beans not managed by XDoclet, add
          a file to your XDoclet merge directory called relationships.xml that contains
          the <ejb-relation></ejb-relation> markups for those beans.
        --> 
   </relationships>

   <!-- Assembly Descriptor -->
     <!--
       To specify your own assembly descriptor info here, add a file to your
       XDoclet merge directory called assembly-descriptor.xml that contains
       the <assembly-descriptor></assembly-descriptor> markup.
     -->

   <assembly-descriptor >
     <!--
       To specify additional security-role elements, add a file in the merge
       directory called ejb-security-roles.xml that contains them.
     -->

   <!-- method permissions -->
     <!--
       To specify additional method-permission elements, add a file in the merge
       directory called ejb-method-permissions.ent that contains them.
     -->

   <!-- transactions -->
     <!--
       To specify additional container-transaction elements, add a file in the merge
       directory called ejb-container-transactions.ent that contains them.
     -->

   <!-- finder transactions -->

   <!-- message destinations -->
     <!--
       To specify additional message-destination elements, add a file in the merge
       directory called ejb-message-destinations.ent that contains them.
     -->

   <!-- exclude list -->
     <!--
       To specify an exclude-list element, add a file in the merge directory
       called ejb-exclude-list.xml that contains it.
     -->
   </assembly-descriptor>

</ejb-jar>
