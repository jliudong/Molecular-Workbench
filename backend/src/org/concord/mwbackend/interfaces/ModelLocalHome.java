/*
 * Generated by XDoclet - Do not edit!
 */
package org.concord.mwbackend.interfaces;

/**
 * Local home interface for Model.
 */
public interface ModelLocalHome
   extends javax.ejb.EJBLocalHome
{
   public static final String COMP_NAME="java:comp/env/ejb/ModelLocal";
   public static final String JNDI_NAME="ModelLocal";

   public org.concord.mwbackend.interfaces.ModelLocal create(java.lang.String zipFile , int zipSize , java.lang.String url , java.lang.String title , java.lang.String userID , java.lang.String teacher , java.lang.String klass , java.lang.String privacy)
      throws javax.ejb.CreateException;

   public java.util.Collection findAllByAuthor(java.lang.String userID, java.lang.Boolean trash)
      throws javax.ejb.FinderException;

   public java.util.Collection findPublishedByAuthor(java.lang.String userID)
      throws javax.ejb.FinderException;

   public java.util.Collection findNonPrivateByAuthor(java.lang.String userID)
      throws javax.ejb.FinderException;

   public java.util.Collection findByTeacher(java.lang.String teacher)
      throws javax.ejb.FinderException;

   public java.util.Collection findByClass(java.lang.String klass)
      throws javax.ejb.FinderException;

   public java.util.Collection findByClassForTeacher(java.lang.String klass)
      throws javax.ejb.FinderException;

   public java.util.Collection findPublishedBetween(long startTimeMillis, long endTimeMillis)
      throws javax.ejb.FinderException;

   public java.util.Collection findAllBetween(long startTimeMillis, long endTimeMillis)
      throws javax.ejb.FinderException;

   public org.concord.mwbackend.interfaces.ModelLocal findByUrl(java.lang.String url)
      throws javax.ejb.FinderException;

   public java.util.Collection findLatest()
      throws javax.ejb.FinderException;

   public java.util.Collection findIdBetween(int startId, int endId)
      throws javax.ejb.FinderException;

   public org.concord.mwbackend.interfaces.ModelLocal findByPrimaryKey(java.lang.Integer pk)
      throws javax.ejb.FinderException;

}
